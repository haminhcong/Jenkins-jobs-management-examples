<?xml version="1.0" encoding="utf-8"?>
<flow-definition plugin="workflow-job">
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps">
    <script>// workaround to check out the Jenkinsfile of the tag because parameters are not replaced
// when using the &quot;Pipeline script from SCM&quot; option
// workaround to check out the Jenkinsfile of the tag because parameters are not replaced
// when using the &quot;Pipeline script from SCM&quot; option
node('linux-master') {
    stage('Check environment') {
        //sh 'ls -al'
        echo &quot;workspace&quot;
        echo &quot;${env.WORKSPACE}&quot;
        echo &quot;gitlabBranch&quot;
        if (&quot;${env.gitlabActionType}&quot; == &quot;PUSH&quot;) {
            checkout changelog: true, poll: true, scm: [
                    $class                           : 'GitSCM', branches: [[name: &quot;${env.gitlabAfter}&quot;]],
                    doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [],
                    userRemoteConfigs                : [
                            [credentialsId: '1a199e0b-8b89-45e4-b85a-d400bc95dd0c',
                             url          : 'ssh://git@192.168.122.10:10022/conghm1/JavaWS.git']
                    ]
            ]
            sh 'ls -al'
            sh 'cat Dockerfile'
        } else if (&quot;${env.gitlabActionType}&quot; == &quot;MERGE&quot;) {

            checkout changelog: true, poll: true, scm: [
                    $class                           : 'GitSCM',
                    branches                         : [[name: &quot;origin/${env.gitlabSourceBranch}&quot;]],
                    doGenerateSubmoduleConfigurations: false,
                    extensions                       : [
                            [
                                    $class : 'PreBuildMerge',
                                    options: [
                                            fastForwardMode: 'FF',
                                            mergeRemote    : 'origin',
                                            mergeStrategy  : 'RESOLVE',
                                            mergeTarget    : &quot;${env.gitlabTargetBranch}&quot;
                                    ]
                            ],
                            [
                                    $class: 'UserIdentity', email: 'conghm1@viettel.com.vn', name: 'conghm1'
                            ]

                    ],
                    submoduleCfg                     : [],
                    userRemoteConfigs                : [[credentialsId: 'jenkins_clone_credentials',
                                                         name         : 'origin',
                                                         url          : &quot;http://192.168.122.10:10080/conghm1/JavaWS.git&quot;]]
            ]


            sh 'ls -al'
            sh 'cat Dockerfile'
        }

    }
    //load 'Jenkinsfile-test'
}
</script>
    <sandbox>false</sandbox>
  </definition>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>true</concurrentBuild>
  <canRoam>true</canRoam>
  <properties>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.3">
      <gitLabConnection>gitlab1</gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GITLAB_PROJECT_URL</name>
          <description/>
          <defaultValue>http://192.168.122.10:10080/conghm1/JavaWS</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <triggers class="vector">
    <com.dabsquared.gitlabjenkins.GitLabPushTrigger plugin="gitlab-plugin@1.5.3">
      <spec/>
      <triggerOnPush>false</triggerOnPush>
      <triggerOnMergeRequest>true</triggerOnMergeRequest>
      <triggerOnPipelineEvent>false</triggerOnPipelineEvent>
      <triggerOnAcceptedMergeRequest>false</triggerOnAcceptedMergeRequest>
      <triggerOnClosedMergeRequest>false</triggerOnClosedMergeRequest>
      <triggerOnApprovedMergeRequest>true</triggerOnApprovedMergeRequest>
      <triggerOpenMergeRequestOnPush>both</triggerOpenMergeRequestOnPush>
      <triggerOnNoteRequest>true</triggerOnNoteRequest>
      <noteRegex>Jenkins please retry a build</noteRegex>
      <ciSkip>false</ciSkip>
      <skipWorkInProgressMergeRequest>false</skipWorkInProgressMergeRequest>
      <setBuildDescription>true</setBuildDescription>
      <branchFilterType>All</branchFilterType>
      <includeBranchesSpec/>
      <excludeBranchesSpec/>
      <targetBranchRegex/>
      <secretToken>{AQAAABAAAAAQuMeqchkWcPzK5rk82x2V/Nvsm+qJ7OJ+zqdFiumyc2o=}</secretToken>
    </com.dabsquared.gitlabjenkins.GitLabPushTrigger>
  </triggers>
  <publishers/>
  <buildWrappers/>
</flow-definition>
